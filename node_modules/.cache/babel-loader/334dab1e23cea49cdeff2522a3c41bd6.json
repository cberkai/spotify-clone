{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\berka\\\\Desktop\\\\clone\\\\spotify-clone\\\\react-spotify-clone\\\\src\\\\Register.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./css/Register.css\";\nimport signup from \"./handlers/signup\";\nimport login from \"./handlers/login\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Cookies from \"universal-cookie\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction Register({\n  history\n}) {\n  const [showLoginForm, setShowLoginForm] = useState(true);\n  const [signupErrors, setSignUpErrors] = useState({});\n  const [loginError, setLoginError] = useState(\"\");\n  const cookies = new Cookies();\n  const [{}, dispatch] = useStateValue();\n\n  const toggleForms = () => {\n    setShowLoginForm(!showLoginForm);\n  };\n\n  let signupData = {\n    name: \"\",\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    passwordAgain: \"\"\n  };\n  let loginData = {\n    usernameOrEmail: \"\",\n    password: \"\"\n  };\n\n  const submitSignup = async e => {\n    e.preventDefault();\n    var formEl = document.forms.SignupForm;\n    var formData = new FormData(formEl);\n\n    for (const [key] of Object.entries(signupData)) {\n      signupData[key] = formData.get(key);\n    }\n\n    const result = await signup(signupData);\n\n    if (typeof result === \"object\") {\n      if (result.sucess) {\n        toast.info(\"SignUp Sucessfull üòç\");\n        cookies.set(\"loginToken\", result.loginToken, {\n          path: \"/\"\n        });\n        dispatch({\n          type: \"LOGIN_STATUS\",\n          item: true\n        });\n        history.push(\"/\");\n      } else {\n        setSignUpErrors(result.errors);\n        toast.error(\"Resolve the errors to continue\");\n      }\n    } else {\n      toast.error(\"Something went wrong try again later\");\n    }\n  };\n\n  const submitLogin = async e => {\n    e.preventDefault();\n    var formEl = document.forms.loginForm;\n    var formData = new FormData(formEl);\n\n    for (const [key] of Object.entries(loginData)) {\n      loginData[key] = formData.get(key);\n    }\n\n    console.log(loginData);\n    const result = await login(loginData);\n\n    if (typeof result == \"object\") {\n      if (result.sucess) {\n        toast.info(\"Login Sucessfull üòç\");\n        cookies.set(\"loginToken\", result.token, {\n          path: \"/\"\n        });\n        dispatch({\n          type: \"LOGIN_STATUS\",\n          item: true\n        });\n        history.push(\"/\");\n      } else {\n        setLoginError(result.error);\n        toast.error(\"Resolve the errors to continue\");\n      }\n    } else {\n      toast.error(\"Something went wrong try again later\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register-main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"./assets/logo/spotify-icons-logos/logos/O1_RGB/O2_PNG/Spotify_Logo_RGB_White.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"activate-signup-form\",\n    onClick: toggleForms,\n    className: showLoginForm ? \"\" : \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"activate-login-form\",\n    onClick: toggleForms,\n    className: showLoginForm ? \"active\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Log In\"), \" \")), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"SignupForm\",\n    method: \"POST\",\n    action: \"register.php\",\n    style: {\n      display: showLoginForm ? \"none\" : \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Your Name\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"show-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, signupErrors === null || signupErrors === void 0 ? void 0 : signupErrors.name), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"First Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Email Adress\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"show-error\",\n    id: \"input-field-email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, signupErrors === null || signupErrors === void 0 ? void 0 : signupErrors.email), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email Adress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Usename\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"show-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, signupErrors === null || signupErrors === void 0 ? void 0 : signupErrors.username), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Usename\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"show-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, signupErrors === null || signupErrors === void 0 ? void 0 : signupErrors.password), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Password Again\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"passwordAgain\",\n    placeholder: \"Password Again\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button-green signup-button\",\n    name: \"signup\",\n    onClick: submitSignup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"loginForm\",\n    action: \"register.php\",\n    method: \"POST\",\n    style: {\n      display: showLoginForm ? \"flex\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Email/Username\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"show-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, loginError), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"usernameOrEmail\",\n    placeholder: \"Email/Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button-green login-button\",\n    name: \"login-submit\",\n    onClick: e => {\n      submitLogin(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"Log In\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"white-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"Forgotten Password\")))));\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/berka/Desktop/clone/spotify-clone/react-spotify-clone/src/Register.js"],"names":["React","useEffect","useState","signup","login","ToastContainer","toast","Cookies","useStateValue","Register","history","showLoginForm","setShowLoginForm","signupErrors","setSignUpErrors","loginError","setLoginError","cookies","dispatch","toggleForms","signupData","name","email","username","password","passwordAgain","loginData","usernameOrEmail","submitSignup","e","preventDefault","formEl","document","forms","SignupForm","formData","FormData","key","Object","entries","get","result","sucess","info","set","loginToken","path","type","item","push","errors","error","submitLogin","loginForm","console","log","token","require","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./css/Register.css\";\r\nimport signup from \"./handlers/signup\";\r\nimport login from \"./handlers/login\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Register({ history }) {\r\n  const [showLoginForm, setShowLoginForm] = useState(true);\r\n  const [signupErrors, setSignUpErrors] = useState({});\r\n  const [loginError, setLoginError] = useState(\"\");\r\n  const cookies = new Cookies();\r\n  const [{}, dispatch] = useStateValue();\r\n\r\n  const toggleForms = () => {\r\n    setShowLoginForm(!showLoginForm);\r\n  };\r\n\r\n  let signupData = {\r\n    name: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    passwordAgain: \"\",\r\n  };\r\n\r\n  let loginData = {\r\n    usernameOrEmail: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const submitSignup = async (e) => {\r\n    e.preventDefault();\r\n    var formEl = document.forms.SignupForm;\r\n    var formData = new FormData(formEl);\r\n\r\n    for (const [key] of Object.entries(signupData)) {\r\n      signupData[key] = formData.get(key);\r\n    }\r\n\r\n    const result = await signup(signupData);\r\n    if (typeof result === \"object\") {\r\n      if (result.sucess) {\r\n        toast.info(\"SignUp Sucessfull üòç\");\r\n\r\n        cookies.set(\"loginToken\", result.loginToken, { path: \"/\" });\r\n        dispatch({\r\n          type: \"LOGIN_STATUS\",\r\n          item: true,\r\n        });\r\n        history.push(\"/\");\r\n      } else {\r\n        setSignUpErrors(result.errors);\r\n        toast.error(\"Resolve the errors to continue\");\r\n      }\r\n    } else {\r\n      toast.error(\"Something went wrong try again later\");\r\n    }\r\n  };\r\n\r\n  const submitLogin = async (e) => {\r\n    e.preventDefault();\r\n    var formEl = document.forms.loginForm;\r\n    var formData = new FormData(formEl);\r\n\r\n    for (const [key] of Object.entries(loginData)) {\r\n      loginData[key] = formData.get(key);\r\n    }\r\n    console.log(loginData);\r\n    const result = await login(loginData);\r\n    if (typeof result == \"object\") {\r\n      if (result.sucess) {\r\n        toast.info(\"Login Sucessfull üòç\");\r\n        cookies.set(\"loginToken\", result.token, { path: \"/\" });\r\n        dispatch({\r\n          type: \"LOGIN_STATUS\",\r\n          item: true,\r\n        });\r\n        history.push(\"/\");\r\n      } else {\r\n        setLoginError(result.error);\r\n        toast.error(\"Resolve the errors to continue\");\r\n      }\r\n    } else {\r\n      toast.error(\"Something went wrong try again later\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"register-main-container\">\r\n      <div className=\"right\">\r\n        <img\r\n          src={require(\"./assets/logo/spotify-icons-logos/logos/O1_RGB/O2_PNG/Spotify_Logo_RGB_White.png\")}\r\n        />\r\n      </div>\r\n      <div className=\"left\">\r\n        <div className=\"button-container\">\r\n          <div\r\n            id=\"activate-signup-form\"\r\n            onClick={toggleForms}\r\n            className={showLoginForm ? \"\" : \"active\"}\r\n          >\r\n            <p>Sign Up</p>\r\n          </div>\r\n          <span\r\n            id=\"activate-login-form\"\r\n            onClick={toggleForms}\r\n            className={showLoginForm ? \"active\" : \"\"}\r\n          >\r\n            <p>Log In</p>{\" \"}\r\n          </span>\r\n        </div>\r\n        <form\r\n          id=\"SignupForm\"\r\n          method=\"POST\"\r\n          action=\"register.php\"\r\n          style={{ display: showLoginForm ? \"none\" : \"flex\" }}\r\n        >\r\n          <p>Your Name</p>\r\n          <span className=\"show-error\">{signupErrors?.name}</span>\r\n          <input type=\"text\" name=\"name\" placeholder=\"First Name\" />\r\n\r\n          <p>Email Adress</p>\r\n          <span className=\"show-error\" id=\"input-field-email\">\r\n            {signupErrors?.email}\r\n          </span>\r\n          <input type=\"email\" name=\"email\" placeholder=\"Email Adress\" />\r\n          <p>Usename</p>\r\n          <span className=\"show-error\">{signupErrors?.username}</span>\r\n          <input type=\"text\" name=\"username\" placeholder=\"Usename\" />\r\n          <p>Password</p>\r\n          <span className=\"show-error\">{signupErrors?.password}</span>\r\n          <input type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n          <p>Password Again</p>\r\n\r\n          <input\r\n            type=\"password\"\r\n            name=\"passwordAgain\"\r\n            placeholder=\"Password Again\"\r\n          />\r\n          <br />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"button-green signup-button\"\r\n            name=\"signup\"\r\n            onClick={submitSignup}\r\n          >\r\n            Sign Up\r\n          </button>\r\n        </form>\r\n\r\n        <div>\r\n          <form\r\n            id=\"loginForm\"\r\n            action=\"register.php\"\r\n            method=\"POST\"\r\n            style={{ display: showLoginForm ? \"flex\" : \"none\" }}\r\n          >\r\n            <p>Email/Username</p>\r\n            <span className=\"show-error\">{loginError}</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"usernameOrEmail\"\r\n              placeholder=\"Email/Username\"\r\n            />\r\n            <p>Password</p>\r\n            <input type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"button-green login-button\"\r\n              name=\"login-submit\"\r\n              onClick={(e) => {\r\n                submitLogin(e);\r\n              }}\r\n            >\r\n              Log In\r\n            </button>\r\n            <a href=\"#\" className=\"white-text\">\r\n              Forgotten Password\r\n            </a>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}