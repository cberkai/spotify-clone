{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\berka\\\\Desktop\\\\clone\\\\spotify-clone\\\\react-spotify-clone\\\\src\\\\components\\\\AlbumHader.js\";\nimport React, { useState } from \"react\";\nimport \"../css/components/AlbumHader.css\";\nimport { useStateValue } from \"../StateProvider\";\nimport likeAlbum from \"../handlers/likeAlbum\";\nimport Cookies from \"universal-cookie\";\nimport { toast } from \"react-toastify\";\n\nfunction AlbumHader({\n  id,\n  title,\n  artist,\n  discription,\n  img,\n  likes,\n  isRoundedImg,\n  songsList,\n  albumId,\n  showLikeButton = true,\n  showOptionsButton = true,\n  showNumOfLikes = true,\n  showAlbumArt = true,\n  isLikedByUser,\n  type = \"\"\n}) {\n  const [{\n    isPlaying,\n    albumColor,\n    playlist,\n    currentSong,\n    currentPlayingAlbumId,\n    tempAlbumId\n  }] = useStateValue();\n  const [{}, dispatch] = useStateValue();\n  const [{\n    user\n  }] = useStateValue();\n  const cookies = new Cookies();\n  const [isAlbumLiked, setIsAlbumLiked] = useState(isLikedByUser);\n  const [albumLikes, setAlbumLikes] = useState(parseInt(likes));\n\n  const like = async () => {\n    if (user.name) {\n      const response = await likeAlbum({\n        token: cookies.get(\"loginToken\"),\n        albumId: id\n      });\n      setIsAlbumLiked(response.isLikedAlbum);\n\n      if (response.isLikedAlbum) {\n        setAlbumLikes(albumLikes + 1);\n      } else {\n        setAlbumLikes(albumLikes + -1);\n      }\n    } else {\n      toast.info(\"Login to like like this album\");\n    }\n  };\n\n  const setSong = () => {\n    if (songsList.length > 0) {\n      if (!isPlaying) {\n        dispatch({\n          type: \"SET_PLAYLIST\",\n          item: songsList\n        });\n        console.log(playlist);\n        dispatch({\n          type: \"SET_CURRENT_ALBUM_ID\",\n          item: tempAlbumId\n        });\n        dispatch({\n          type: \"UPDATE_SONG_STATUS\",\n          item: true\n        });\n      } else {\n        dispatch({\n          type: \"UPDATE_SONG_STATUS\",\n          item: false\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"album-hader\",\n    style: {\n      backgroundColor: albumColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"left\",\n    style: {\n      display: showAlbumArt ? \"block\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: img,\n    alt: title + \" cover image\",\n    style: {\n      borderRadius: isRoundedImg ? \"50%\" : \"0%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    id: \"type\",\n    className: \"white-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, type), /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"title\",\n    className: \"white-text\",\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"discription\",\n    className: \"silvery-text\",\n    title: discription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, discription), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"artist\",\n    className: \"white-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, showLikeButton ? artist + \" . \" : \"\"), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"num-of-likes\",\n    className: \"silvery-text\",\n    style: {\n      display: showNumOfLikes ? \"inline-bolck\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, albumLikes + \" likes\"), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"duration\",\n    className: \"silvery-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"controls\",\n    style: {\n      backgroundColor: albumColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rounded-paly-button\",\n    id: \"album-play-button\",\n    onClick: setSong,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-play\",\n    style: {\n      display: isPlaying && currentPlayingAlbumId === albumId ? \"none\" : \"block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-pause\",\n    style: {\n      display: isPlaying && currentPlayingAlbumId === albumId ? \"block\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"album-like-button\",\n    onClick: like,\n    style: {\n      display: showLikeButton ? \"block\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-heart\",\n    style: {\n      color: isAlbumLiked ? \"#1DB954\" : \"#b3b3b3\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"album-options-button\",\n    style: {\n      display: showOptionsButton ? \"block\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-ellipsis-h silvery-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default AlbumHader;","map":{"version":3,"sources":["C:/Users/berka/Desktop/clone/spotify-clone/react-spotify-clone/src/components/AlbumHader.js"],"names":["React","useState","useStateValue","likeAlbum","Cookies","toast","AlbumHader","id","title","artist","discription","img","likes","isRoundedImg","songsList","albumId","showLikeButton","showOptionsButton","showNumOfLikes","showAlbumArt","isLikedByUser","type","isPlaying","albumColor","playlist","currentSong","currentPlayingAlbumId","tempAlbumId","dispatch","user","cookies","isAlbumLiked","setIsAlbumLiked","albumLikes","setAlbumLikes","parseInt","like","name","response","token","get","isLikedAlbum","info","setSong","length","item","console","log","backgroundColor","display","borderRadius","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../css/components/AlbumHader.css\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport likeAlbum from \"../handlers/likeAlbum\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { toast } from \"react-toastify\";\r\nfunction AlbumHader({\r\n  id,\r\n  title,\r\n  artist,\r\n  discription,\r\n  img,\r\n  likes,\r\n  isRoundedImg,\r\n  songsList,\r\n  albumId,\r\n  showLikeButton = true,\r\n  showOptionsButton = true,\r\n  showNumOfLikes = true,\r\n  showAlbumArt = true,\r\n  isLikedByUser,\r\n  type = \"\",\r\n}) {\r\n  const [\r\n    {\r\n      isPlaying,\r\n      albumColor,\r\n      playlist,\r\n      currentSong,\r\n      currentPlayingAlbumId,\r\n      tempAlbumId,\r\n    },\r\n  ] = useStateValue();\r\n  const [{}, dispatch] = useStateValue();\r\n  const [{ user }] = useStateValue();\r\n  const cookies = new Cookies();\r\n\r\n  const [isAlbumLiked, setIsAlbumLiked] = useState(isLikedByUser);\r\n  const [albumLikes, setAlbumLikes] = useState(parseInt(likes));\r\n\r\n  const like = async () => {\r\n    if (user.name) {\r\n      const response = await likeAlbum({\r\n        token: cookies.get(\"loginToken\"),\r\n        albumId: id,\r\n      });\r\n      setIsAlbumLiked(response.isLikedAlbum);\r\n      if (response.isLikedAlbum) {\r\n        setAlbumLikes(albumLikes + 1);\r\n      } else {\r\n        setAlbumLikes(albumLikes + -1);\r\n      }\r\n    } else {\r\n      toast.info(\"Login to like like this album\");\r\n    }\r\n  };\r\n  const setSong = () => {\r\n    if (songsList.length > 0) {\r\n      if (!isPlaying) {\r\n        dispatch({\r\n          type: \"SET_PLAYLIST\",\r\n          item: songsList,\r\n        });\r\n        console.log(playlist);\r\n\r\n        dispatch({\r\n          type: \"SET_CURRENT_ALBUM_ID\",\r\n          item: tempAlbumId,\r\n        });\r\n\r\n        dispatch({\r\n          type: \"UPDATE_SONG_STATUS\",\r\n          item: true,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: \"UPDATE_SONG_STATUS\",\r\n          item: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"album-hader\" style={{ backgroundColor: albumColor }}>\r\n        <div id=\"left\" style={{ display: showAlbumArt ? \"block\" : \"none\" }}>\r\n          <img\r\n            src={img}\r\n            alt={title + \" cover image\"}\r\n            style={{\r\n              borderRadius: isRoundedImg ? \"50%\" : \"0%\",\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div id=\"right\">\r\n          <h4 id=\"type\" className=\"white-text\">\r\n            {type}\r\n          </h4>\r\n          <h1 id=\"title\" className=\"white-text\" title={title}>\r\n            {title}\r\n          </h1>\r\n          <p id=\"discription\" className=\"silvery-text\" title={discription}>\r\n            {discription}\r\n          </p>\r\n          <div id=\"details\">\r\n            <span id=\"artist\" className=\"white-text\">\r\n              {showLikeButton ? artist + \" . \" : \"\"}\r\n            </span>\r\n            <span\r\n              id=\"num-of-likes\"\r\n              className=\"silvery-text\"\r\n              style={{ display: showNumOfLikes ? \"inline-bolck\" : \"none\" }}\r\n            >\r\n              {albumLikes + \" likes\"}\r\n            </span>\r\n            <span id=\"duration\" className=\"silvery-text\"></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"controls\" style={{ backgroundColor: albumColor }}>\r\n        <div\r\n          className=\"rounded-paly-button\"\r\n          id=\"album-play-button\"\r\n          onClick={setSong}\r\n        >\r\n          <i\r\n            className=\"fas fa-play\"\r\n            style={{\r\n              display:\r\n                isPlaying && currentPlayingAlbumId === albumId\r\n                  ? \"none\"\r\n                  : \"block\",\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"fas fa-pause\"\r\n            style={{\r\n              display:\r\n                isPlaying && currentPlayingAlbumId === albumId\r\n                  ? \"block\"\r\n                  : \"none\",\r\n            }}\r\n          ></i>\r\n        </div>\r\n\r\n        <div\r\n          id=\"album-like-button\"\r\n          onClick={like}\r\n          style={{ display: showLikeButton ? \"block\" : \"none\" }}\r\n        >\r\n          <i\r\n            className=\"fas fa-heart\"\r\n            style={{ color: isAlbumLiked ? \"#1DB954\" : \"#b3b3b3\" }}\r\n          ></i>\r\n        </div>\r\n\r\n        <div\r\n          id=\"album-options-button\"\r\n          style={{ display: showOptionsButton ? \"block\" : \"none\" }}\r\n        >\r\n          <i className=\"fas fa-ellipsis-h silvery-text\"></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AlbumHader;\r\n"]},"metadata":{},"sourceType":"module"}