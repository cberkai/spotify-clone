{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\berka\\\\Desktop\\\\clone\\\\spotify-clone\\\\react-spotify-clone\\\\src\\\\App.js\";\nimport React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./components/Sidebar\";\nimport NowPlayingBar from \"./components/NowPlayingBar\";\nimport HomeGrid from \"./components/HomeGrid\";\nimport Hader from \"./components/Hader\";\nimport Album from \"./components/Album\";\nimport Search from \"./components/Search\";\nimport Artist from \"./components/Artist\";\nimport Register from \"./Register\";\nimport Liked from \"./components/Liked\";\nimport AddToPlaylistModel from \"./components/AddToPlaylistModel\";\nimport CreateAlbumPopup from \"./components/CreateAlbumPopup\";\nimport SongPopupOptions from \"./components/SongPopupOptions\";\nimport Playlist from \"./components/Playlist\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport getUserInfo from \"./handlers/getUserInfo\";\nimport { useStateValue } from \"./StateProvider\";\nimport { ToastContainer } from \"react-toastify\";\n\nfunction App() {\n  const cookies = new Cookies();\n  const [{}, dispatch] = useStateValue();\n  const [{\n    user,\n    isLogin\n  }] = useStateValue();\n\n  const setUserInfo = async () => {\n    const data = await getUserInfo(cookies.get(\"loginToken\"));\n    dispatch({\n      type: \"SET_USER\",\n      item: data\n    });\n    dispatch({\n      type: \"LOGIN_STATUS\",\n      item: true\n    });\n  };\n\n  useEffect(() => {\n    if (cookies.get(\"loginToken\")) {\n      setUserInfo();\n    }\n  }, [isLogin]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/register\",\n    component: Register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(NowPlayingBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CreateAlbumPopup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SongPopupOptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AddToPlaylistModel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ToastContainer, {\n    position: \"bottom-center\",\n    autoClose: 3000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomeGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/album/:id\",\n    component: Album,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/search\",\n    component: Search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/search/:query\",\n    component: Search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/artist/:id\",\n    component: Artist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/liked\",\n    component: Liked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/playlist/:id\",\n    component: Playlist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/berka/Desktop/clone/spotify-clone/react-spotify-clone/src/App.js"],"names":["React","useEffect","Sidebar","NowPlayingBar","HomeGrid","Hader","Album","Search","Artist","Register","Liked","AddToPlaylistModel","CreateAlbumPopup","SongPopupOptions","Playlist","Switch","Route","Cookies","getUserInfo","useStateValue","ToastContainer","App","cookies","dispatch","user","isLogin","setUserInfo","data","get","type","item"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport NowPlayingBar from \"./components/NowPlayingBar\";\r\nimport HomeGrid from \"./components/HomeGrid\";\r\nimport Hader from \"./components/Hader\";\r\nimport Album from \"./components/Album\";\r\nimport Search from \"./components/Search\";\r\nimport Artist from \"./components/Artist\";\r\nimport Register from \"./Register\";\r\nimport Liked from \"./components/Liked\";\r\nimport AddToPlaylistModel from \"./components/AddToPlaylistModel\";\r\nimport CreateAlbumPopup from \"./components/CreateAlbumPopup\";\r\nimport SongPopupOptions from \"./components/SongPopupOptions\";\r\nimport Playlist from \"./components/Playlist\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nimport getUserInfo from \"./handlers/getUserInfo\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nfunction App() {\r\n  const cookies = new Cookies();\r\n  const [{}, dispatch] = useStateValue();\r\n  const [{ user, isLogin }] = useStateValue();\r\n  const setUserInfo = async () => {\r\n    const data = await getUserInfo(cookies.get(\"loginToken\"));\r\n    dispatch({\r\n      type: \"SET_USER\",\r\n      item: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: \"LOGIN_STATUS\",\r\n      item: true,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (cookies.get(\"loginToken\")) {\r\n      setUserInfo();\r\n    }\r\n  }, [isLogin]);\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <Route path=\"*\">\r\n          <Hader />\r\n          <Sidebar />\r\n          <NowPlayingBar />\r\n          <CreateAlbumPopup />\r\n          <SongPopupOptions />\r\n          <AddToPlaylistModel />\r\n        </Route>\r\n      </Switch>\r\n      <div id=\"main-content\">\r\n        <ToastContainer position=\"bottom-center\" autoClose={3000} />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomeGrid} />\r\n          <Route exact path=\"/album/:id\" component={Album} />\r\n          <Route exact path=\"/search\" component={Search} />\r\n          <Route exact path=\"/search/:query\" component={Search} />\r\n          <Route exact path=\"/artist/:id\" component={Artist} />\r\n          <Route exact path=\"/liked\" component={Liked} />\r\n          <Route exact path=\"/playlist/:id\" component={Playlist} />\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}