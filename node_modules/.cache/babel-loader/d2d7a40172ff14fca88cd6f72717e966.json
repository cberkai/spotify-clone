{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\berka\\\\Desktop\\\\clone\\\\spotify-clone\\\\react-spotify-clone\\\\src\\\\components\\\\AlbumCart.js\";\nimport React from \"react\";\nimport \"../css/components/AlbumCart.css\";\nimport { Link } from \"react-router-dom\";\nimport { useStateValue } from \"../StateProvider\";\nimport Cookies from \"universal-cookie\";\nimport BASE_URL from \"../helpers/baseUrl\";\n\nfunction AlbumCart({\n  img,\n  title,\n  discription,\n  id,\n  isArtist = false\n}) {\n  const [{\n    playlist,\n    user,\n    currentSongId,\n    isPlaying,\n    currentPlayingAlbumId\n  }] = useStateValue();\n  const [{}, dispatch] = useStateValue();\n  const cookies = new Cookies();\n\n  const setPlayList = id => {\n    var _playlist$currentSong;\n\n    if (((_playlist$currentSong = playlist[currentSongId]) === null || _playlist$currentSong === void 0 ? void 0 : _playlist$currentSong.albumId) === id) {\n      // if palylist is already set no need to set it agin just paly pause the song\n      //console.log(isPlaying);\n      dispatch({\n        type: \"UPDATE_SONG_STATUS\",\n        item: !isPlaying\n      });\n    } else {\n      fetch(`${BASE_URL}getAlbumInfo.php?id=${id}&token=${cookies.get(\"loginToken\")}`).then(respone => respone.json()).then(data => {\n        dispatch({\n          type: \"SET_PLAYLIST\",\n          item: data.songs\n        });\n        dispatch({\n          type: \"UPDATE_SONG_STATUS\",\n          item: true\n        });\n        dispatch({\n          type: \"SET_CURRENT_ALBUM_ID\",\n          item: data.album.id\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Link, {\n    to: isArtist ? \"/artist/\" + id : \"/album/\" + id,\n    className: \"album-container\",\n    id: \"album-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: img,\n    alt: title + \" cover image\",\n    style: {\n      borderRadius: isArtist ? \"50%\" : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"album-tittle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"white-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"album-discription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"silvery-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, discription)), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"circular-paly-button\",\n    onClick: e => {\n      e.preventDefault();\n      setPlayList(id);\n    },\n    style: {\n      visibility: currentPlayingAlbumId == id ? \"visible\" : \"\",\n      display: isArtist ? \"none\" : \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-play\",\n    id: \"album-floating-play-button\",\n    style: {\n      display: isPlaying && currentPlayingAlbumId == id ? \"none\" : \"block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-pause\",\n    id: \"album-floating-pause-button\",\n    style: {\n      display: isPlaying && currentPlayingAlbumId == id ? \"block\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default AlbumCart;","map":{"version":3,"sources":["C:/Users/berka/Desktop/clone/spotify-clone/react-spotify-clone/src/components/AlbumCart.js"],"names":["React","Link","useStateValue","Cookies","BASE_URL","AlbumCart","img","title","discription","id","isArtist","playlist","user","currentSongId","isPlaying","currentPlayingAlbumId","dispatch","cookies","setPlayList","albumId","type","item","fetch","get","then","respone","json","data","songs","album","borderRadius","e","preventDefault","visibility","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iCAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,QAAP,MAAqB,oBAArB;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,WAAd;AAA2BC,EAAAA,EAA3B;AAA+BC,EAAAA,QAAQ,GAAG;AAA1C,CAAnB,EAAsE;AACpE,QAAM,CACJ;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,aAAlB;AAAiCC,IAAAA,SAAjC;AAA4CC,IAAAA;AAA5C,GADI,IAEFb,aAAa,EAFjB;AAGA,QAAM,CAAC,EAAD,EAAKc,QAAL,IAAiBd,aAAa,EAApC;AACA,QAAMe,OAAO,GAAG,IAAId,OAAJ,EAAhB;;AAEA,QAAMe,WAAW,GAAIT,EAAD,IAAQ;AAAA;;AAC1B,QAAI,0BAAAE,QAAQ,CAACE,aAAD,CAAR,gFAAyBM,OAAzB,MAAqCV,EAAzC,EAA6C;AAC3C;AACA;AACAO,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,oBADC;AAEPC,QAAAA,IAAI,EAAE,CAACP;AAFA,OAAD,CAAR;AAID,KAPD,MAOO;AACLQ,MAAAA,KAAK,CACF,GAAElB,QAAS,uBAAsBK,EAAG,UAASQ,OAAO,CAACM,GAAR,CAC5C,YAD4C,CAE5C,EAHC,CAAL,CAKGC,IALH,CAKSC,OAAD,IAAaA,OAAO,CAACC,IAAR,EALrB,EAMGF,IANH,CAMSG,IAAD,IAAU;AACdX,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAE,cADC;AAEPC,UAAAA,IAAI,EAAEM,IAAI,CAACC;AAFJ,SAAD,CAAR;AAIAZ,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAE,oBADC;AAEPC,UAAAA,IAAI,EAAE;AAFC,SAAD,CAAR;AAKAL,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAE,sBADC;AAEPC,UAAAA,IAAI,EAAEM,IAAI,CAACE,KAAL,CAAWpB;AAFV,SAAD,CAAR;AAID,OApBH;AAqBD;AACF,GA/BD;;AAiCA,sBACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAEC,QAAQ,GAAG,aAAaD,EAAhB,GAAqB,YAAYA,EAD/C;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,EAAE,EAAC,iBAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,IAAA,GAAG,EAAEH,GADP;AAEE,IAAA,GAAG,EAAEC,KAAK,GAAG,cAFf;AAGE,IAAA,KAAK,EAAE;AAAEuB,MAAAA,YAAY,EAAEpB,QAAQ,GAAG,KAAH,GAAW;AAAnC,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAUE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BH,KAA3B,CADF,CAVF,eAaE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BC,WAA7B,CADF,CAbF,eAgBE;AACE,IAAA,EAAE,EAAC,sBADL;AAEE,IAAA,OAAO,EAAGuB,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;AACAd,MAAAA,WAAW,CAACT,EAAD,CAAX;AACD,KALH;AAME,IAAA,KAAK,EAAE;AACLwB,MAAAA,UAAU,EAAElB,qBAAqB,IAAIN,EAAzB,GAA8B,SAA9B,GAA0C,EADjD;AAELyB,MAAAA,OAAO,EAAExB,QAAQ,GAAG,MAAH,GAAY;AAFxB,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,EAAE,EAAC,4BAFL;AAGE,IAAA,KAAK,EAAE;AACLwB,MAAAA,OAAO,EACLpB,SAAS,IAAIC,qBAAqB,IAAIN,EAAtC,GAA2C,MAA3C,GAAoD;AAFjD,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAmBE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,EAAE,EAAC,6BAFL;AAGE,IAAA,KAAK,EAAE;AACLyB,MAAAA,OAAO,EACLpB,SAAS,IAAIC,qBAAqB,IAAIN,EAAtC,GAA2C,OAA3C,GAAqD;AAFlD,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CAhBF,CADF;AA+CD;;AAED,eAAeJ,SAAf","sourcesContent":["import React from \"react\";\r\nimport \"../css/components/AlbumCart.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport Cookies from \"universal-cookie\";\r\nimport BASE_URL from \"../helpers/baseUrl\";\r\n\r\nfunction AlbumCart({ img, title, discription, id, isArtist = false }) {\r\n  const [\r\n    { playlist, user, currentSongId, isPlaying, currentPlayingAlbumId },\r\n  ] = useStateValue();\r\n  const [{}, dispatch] = useStateValue();\r\n  const cookies = new Cookies();\r\n\r\n  const setPlayList = (id) => {\r\n    if (playlist[currentSongId]?.albumId === id) {\r\n      // if palylist is already set no need to set it agin just paly pause the song\r\n      //console.log(isPlaying);\r\n      dispatch({\r\n        type: \"UPDATE_SONG_STATUS\",\r\n        item: !isPlaying,\r\n      });\r\n    } else {\r\n      fetch(\r\n        `${BASE_URL}getAlbumInfo.php?id=${id}&token=${cookies.get(\r\n          \"loginToken\"\r\n        )}`\r\n      )\r\n        .then((respone) => respone.json())\r\n        .then((data) => {\r\n          dispatch({\r\n            type: \"SET_PLAYLIST\",\r\n            item: data.songs,\r\n          });\r\n          dispatch({\r\n            type: \"UPDATE_SONG_STATUS\",\r\n            item: true,\r\n          });\r\n\r\n          dispatch({\r\n            type: \"SET_CURRENT_ALBUM_ID\",\r\n            item: data.album.id,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Link\r\n      to={isArtist ? \"/artist/\" + id : \"/album/\" + id}\r\n      className=\"album-container\"\r\n      id=\"album-container\"\r\n    >\r\n      <img\r\n        src={img}\r\n        alt={title + \" cover image\"}\r\n        style={{ borderRadius: isArtist ? \"50%\" : \"\" }}\r\n      />\r\n      <div className=\"album-tittle\">\r\n        <p className=\"white-text\">{title}</p>\r\n      </div>\r\n      <div className=\"album-discription\">\r\n        <p className=\"silvery-text\">{discription}</p>\r\n      </div>\r\n      <div\r\n        id=\"circular-paly-button\"\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          setPlayList(id);\r\n        }}\r\n        style={{\r\n          visibility: currentPlayingAlbumId == id ? \"visible\" : \"\",\r\n          display: isArtist ? \"none\" : \"flex\",\r\n        }}\r\n      >\r\n        <i\r\n          className=\"fas fa-play\"\r\n          id=\"album-floating-play-button\"\r\n          style={{\r\n            display:\r\n              isPlaying && currentPlayingAlbumId == id ? \"none\" : \"block\",\r\n          }}\r\n        ></i>\r\n        <i\r\n          className=\"fas fa-pause\"\r\n          id=\"album-floating-pause-button\"\r\n          style={{\r\n            display:\r\n              isPlaying && currentPlayingAlbumId == id ? \"block\" : \"none\",\r\n          }}\r\n        ></i>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default AlbumCart;\r\n"]},"metadata":{},"sourceType":"module"}